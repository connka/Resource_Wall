#### Link to projet requirements: (https://web-compass.lighthouselabs.ca/projects/w4-midterm-proj);

1) Install postman for sending request without frontend.
2) Fireframe
3) ERD
4) Define routes

#### TABLES FOR DATABASE ####

- users  
    // id(PK),username,password,created_at
- profile
    // id(PK),id(users)FK,name,email,intrests,created_at,last_updated_at 
- intrests  
    // id(PK),name 
- resourses 
    // id(PK),url,title,description,type,created_at,last_updated_at
-user_intrests
    // id(PK),id(users)FK,id(intrests)FK
- user_resourse 
    // id(PK),id(users)FK,id(resourses)FK
- user_likes 
    //id(PK), id(users)FK,id(resourses)FK,created_at,last_updated_at
- user_comments
    // id(PK),text, id(users)FK , id(resourses)FK ,created_at,last_updated_at 
- user_resourse_rating
    // id(PK),id(users)FK , id(resourses)FK,rating,created_at,last_updated_at 
### ROUTES FOR SERVER ###   




/// 



exports.down = function(knex, Promise) {
  return knex.schema.dropTable('profiles').dropTable('users');
};

///

exports.up = function(knex, Promise) {
  return knex.schema.createTable('intrests', function(table) {
    table.increments('id');
    table
      .string('name')
      .unique()
      .notNullable();
    table.timestamp('created_at').defaultTo(knex.fn.now());
    table.timestamp('updated_at').defaultTo(knex.fn.now());
  });
};

exports.down = function(knex, Promise) {
  return knex.schema.dropTable('intrests');
};

///

exports.up = function(knex, Promise) {
  return knex.schema.createTable('resourses', function(table) {
    table.increments('id');
    table
      .string('url')
      .unique()
      .notNullable();
    table
      .string('title')
      .unique()
      .notNullable();
    table
      .string('description')
      .unique()
      .notNullable();
    table
      .string('type')
      .unique()
      .notNullable();
    table.timestamp('created_at').defaultTo(knex.fn.now());
    table.timestamp('updated_at').defaultTo(knex.fn.now());
  });
};

exports.down = function(knex, Promise) {
  return knex.schema.dropTable('resourses');
};

///

exports.up = function(knex, Promise) {
  return knex.schema.createTable('user_likes', function(table) {
    table.increments('id');
    table
      .integer('user_id')
      .references('id')
      .inTable('users');
    table
      .integer('resourse_id')
      .references('id')
      .inTable('resourses');
    table.timestamp('created_at').defaultTo(knex.fn.now());
    table.timestamp('updated_at').defaultTo(knex.fn.now());
  });
};

exports.down = function(knex, Promise) {
  return knex.schema.dropTable('user_likes');
};

///

exports.up = function(knex, Promise) {
  return knex.schema.createTable('user_resourse', function(table) {
    table.increments('id');
    table
      .integer('user_id')
      .references('id')
      .inTable('users');
    table
      .integer('resourse_id')
      .references('id')
      .inTable('resourses');
    table.timestamp('created_at').defaultTo(knex.fn.now());
    table.timestamp('updated_at').defaultTo(knex.fn.now());
  });
};

exports.down = function(knex, Promise) {
  return knex.schema.dropTable('user_resourse');
};

///






  
